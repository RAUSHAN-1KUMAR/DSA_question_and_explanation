/*
- constructor is a special function in a class that automatically runs when you create an object. It's used to initialize values or set up something when the object is created.
- constructor is the only function in class c++ that has no return type.
    - constructor name is same as class name
    - can't declare constructor under private section.
*/

/*
Can constructor be made private? yes, it can be made private, but we can't acess it directly form outside of the class.
*/

/*
Compiler default constructor tabhi add kerta h jab humne koi bhi constructor define nahi kiya ho.
    - compiler default constructor is non-parameterized constructor
    - compiler default constructor is added by compiler automatically
    - if we add any constructor, let say we added only parametrized constructor, then the compiler will not add any default constructor
*/

/*
- Default constructor = No arguments, can be auto-generated by compiler.

- Non-parameterized constructor = No arguments, but you write it yourself.
*/


#include<iostream>
#include<string>
#include<vector>
using namespace std;

class Student
{
private:
    string gf;

public:
    int id;
    int age;
    string name;
    bool present;
    int nos;

    // constructor starts with its own class name
    // default constructor assigns garbage value
    Student(){
        cout << "Student ctor called: " << endl;
    }

    // parameterized constructor
    Student(int _id, int _age, bool _present, string _name, int _nos, string _gfname)
    {
        id = _id;
        age = _age;
        present = _present;
        name  = _name;
        nos = _nos;
        gf = _gfname;
        cout << "parametrized constructor" << endl;
    }

    void study(){
        cout << "studying" << endl;
    }

    void sleep(){
        cout << "sleeping" << endl;
    }

    void bunk(){
        cout << "bunking" << endl;
    }

private:
    void gfChatting(){
        cout << "chatting" << endl;
    }
};


int main()
{
    Student s1;

    Student s2(1, 21, false, "chota bheem", 5,  "chutki");
    cout << s2.name << endl;
    
    return 0;
} 

